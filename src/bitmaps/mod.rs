pub mod bitmaps {
    use crate::BlockType;
    pub fn get_map(block: BlockType) -> Vec<u32> {
        match block {
            BlockType::Skew => {
                return vec![
                    0, 0, 0, 0, 0, 0, 0, 0, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 0, 0, 0, 0, 0, 0, 0, 0, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 0, 0, 0, 0, 0, 0, 0, 0, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 0, 0, 0, 0, 0,
                    0, 0, 0, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 0, 0, 0, 0, 0, 0, 0, 0, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 0, 0, 0, 0, 0, 0, 0, 0, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 0, 0, 0, 0, 0, 0, 0, 0, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 0, 0, 0,
                    0, 0, 0, 0, 0, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 0, 0, 0, 0, 0, 0, 0, 0, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 0, 0, 0, 0, 0, 0, 0, 0, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 0, 0, 0, 0, 0, 0, 0, 0, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 0, 0, 0,
                    0, 0, 0, 0, 0, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 0, 0, 0, 0, 0, 0, 0, 0, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 0, 0, 0, 0, 0, 0, 0, 0, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 0, 0, 0, 0, 0, 0, 0, 0,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280,
                    65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 65280, 0,
                    0, 0, 0, 0, 0, 0, 0,
                ];
            }
            BlockType::Ell => {
                return vec![
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 0, 0, 0, 0, 0, 0, 0, 0, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 0, 0, 0, 0, 0, 0, 0, 0, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 0, 0, 0, 0, 0, 0, 0, 0, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 0, 0, 0, 0, 0, 0, 0, 0, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    0, 0, 0, 0, 0, 0, 0, 0, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 0, 0, 0,
                    0, 0, 0, 0, 0, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 0, 0, 0, 0, 0, 0,
                    0, 0, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 0, 0, 0, 0, 0, 0, 0, 0,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 0, 0, 0, 0, 0, 0, 0, 0, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 0, 0, 0, 0, 0, 0, 0, 0, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 0, 0, 0, 0, 0, 0, 0, 0, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 0, 0, 0, 0, 0, 0, 0, 0, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    0, 0, 0, 0, 0, 0, 0, 0, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 0, 0, 0,
                    0, 0, 0, 0, 0, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 0, 0, 0, 0, 0, 0,
                    0, 0, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 0, 0, 0, 0, 0, 0, 0, 0,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 0, 0, 0, 0, 0, 0, 0, 0, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 0, 0, 0, 0, 0, 0, 0, 0, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                    16744448, 16744448, 16744448, 16744448, 16744448, 16744448,
                ];
            }
            BlockType::Tee => {
                return vec![
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    0, 0, 0, 0, 0, 0, 0, 0, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 16711935,
                    16711935, 16711935, 16711935, 16711935, 16711935, 16711935, 0, 0, 0, 0, 0, 0,
                    0, 0,
                ];
            }
            BlockType::Square => {
                return vec![
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                    16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960, 16776960,
                ];
            }
            BlockType::Straight => {
                return vec![
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535,
                    65535, 65535, 65535, 65535,
                ];
            }
        }
    }
    pub fn get_width(block: BlockType) -> u8 {
        match block {
            BlockType::Ell => return 20,
            BlockType::Skew => return 30,
            BlockType::Straight => return 40,
            BlockType::Tee => return 30,
            BlockType::Square => return 20,
        }
    }
    pub fn get_height(block: BlockType) -> u8 {
        match block {
            BlockType::Ell => return 30,
            BlockType::Skew => return 20,
            BlockType::Straight => return 10,
            BlockType::Tee => return 20,
            BlockType::Square => return 20,
        }
    }
}
